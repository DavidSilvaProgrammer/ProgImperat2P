https://wagnergaspar.com/como-ler-varios-valores-do-teclado-com-a-funcao-scanf/
https://pt.stackoverflow.com/questions/75653/arredondamento-em-c
https://pt.stackoverflow.com/questions/815/como-fa%C3%A7o-para-arredondar-n%C3%BAmeros-para-o-inteiro-mais-pr%C3%B3ximo
https://pt.stackoverflow.com/questions/31232/como-arredondar-decimais-para-cima-para-obter-um-inteiro-em-c
https://pt.stackoverflow.com/questions/215954/como-fa%C3%A7o-para-arredondar-um-n%C3%BAmero-float-de-duas-casas-decimais-para-uma-se-tiv
https://www.educamaisbrasil.com.br/enem/matematica/volume-da-esfera




A biblioteca (math.h) até 2010 não implementava a função round() por natureza, existiam somente duas funções que faziam isso por meio de conceitos matemáticos.

floor()

Implementa o conceito de chão. Resumidamente é o primeiro inteiro encontrado menor do que o valor resultado da operação

Exemplos:

    floor(1.3) // retorna 1
    floor(2.9) // retorna 2

ceil()

Implementa o conceito de teto. Resumidamente é o primeiro inteiro encontrado maior do que o valor resultado da operação

Exemplos:

    ceil(1.1)  // retorna 2
    ceil(3.6)  // retorna 4

Em 2011 foi implementada a função round() à biblioteca math.h.

round()

Retorna o inteiro mais próximo do número passado como argumento.

Exemplos:

    round(1.4) //retorna 1
    round(3.6) //retorna 4

É possível fazer a sua própria implementação para a função round() caso não se deseje incluir a biblioteca ao seu projeto.

Implementação

Eu geralmente adiciono essa função, evitando uma biblioteca extra:

int round(double number)
{
    return (number >= 0) ? (int)(number + 0.5) : (int)(number - 0.5);
}

Onde é somado/subtraído 0.5 ao número, e o mesmo truncado para inteiro, resultando em uma implementação perfeita de round()

fonte: http://www.codeproject.com/Articles/58289/C-Round-Function

